/***************************************************************************\
 *   Copyright (C) 2006 by Nestal Wan                                      *
 *   me@nestal.net                                                         *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; version 2.                              *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
\***************************************************************************/

/**	\file	CodeMap.cc
    \brief	definition the CodeMap class
    \date	Mar 21, 2010
    \author	Nestal Wan
*/

#include "CodeMap.hh"

#include "util/CArray.hh"

#include <boost/bimap.hpp>
#include <boost/bimap/set_of.hpp>
#include <boost/bimap/multiset_of.hpp>

#include <cstring>

namespace pdf {

namespace
{
	struct StrComp
	{
		bool operator()( const char *s1, const char *s2 ) const
		{
			return std::strcmp( s1, s2 ) > 0 ;
		}
	} ;

	typedef	boost::bimap<
		boost::bimaps::multiset_of<wchar_t>,
		boost::bimaps::set_of<const char*, StrComp>
	> UnicodeMap ; 

	const char *not_def = ".notdef" ;

	const UnicodeMap::value_type table[] =
	{
		UnicodeMap::value_type( 0x0000, not_def ),
		UnicodeMap::value_type( 0x0020, "space"),
		UnicodeMap::value_type( 0x0021, "exclam"),
		UnicodeMap::value_type( 0x0022, "quotedbl"),
		UnicodeMap::value_type( 0x0023, "numbersign"),
		UnicodeMap::value_type( 0x0024, "dollar"),
		UnicodeMap::value_type( 0x0025, "percent"),
		UnicodeMap::value_type( 0x0026, "ampersand"),
		UnicodeMap::value_type( 0x0027, "quotesingle"),
		UnicodeMap::value_type( 0x0028, "parenleft"),
		UnicodeMap::value_type( 0x0029, "parenright"),
		UnicodeMap::value_type( 0x002A, "asterisk"),
		UnicodeMap::value_type( 0x002B, "plus"),
		UnicodeMap::value_type( 0x002C, "comma"),
		UnicodeMap::value_type( 0x002D, "hyphen"),
		UnicodeMap::value_type( 0x002E, "period"),
		UnicodeMap::value_type( 0x002F, "slash"),
		UnicodeMap::value_type( 0x0030, "zero"),
		UnicodeMap::value_type( 0x0031, "one"),
		UnicodeMap::value_type( 0x0032, "two"),
		UnicodeMap::value_type( 0x0033, "three"),
		UnicodeMap::value_type( 0x0034, "four"),
		UnicodeMap::value_type( 0x0035, "five"),
		UnicodeMap::value_type( 0x0036, "six"),
		UnicodeMap::value_type( 0x0037, "seven"),
		UnicodeMap::value_type( 0x0038, "eight"),
		UnicodeMap::value_type( 0x0039, "nine"),
		UnicodeMap::value_type( 0x003A, "colon"),
		UnicodeMap::value_type( 0x003B, "semicolon"),
		UnicodeMap::value_type( 0x003C, "less"),
		UnicodeMap::value_type( 0x003D, "equal"),
		UnicodeMap::value_type( 0x003E, "greater"),
		UnicodeMap::value_type( 0x003F, "question"),
		UnicodeMap::value_type( 0x0040, "at"),
		UnicodeMap::value_type( 0x0041, "A"),
		UnicodeMap::value_type( 0x0042, "B"),
		UnicodeMap::value_type( 0x0043, "C"),
		UnicodeMap::value_type( 0x0044, "D"),
		UnicodeMap::value_type( 0x0045, "E"),
		UnicodeMap::value_type( 0x0046, "F"),
		UnicodeMap::value_type( 0x0047, "G"),
		UnicodeMap::value_type( 0x0048, "H"),
		UnicodeMap::value_type( 0x0049, "I"),
		UnicodeMap::value_type( 0x004A, "J"),
		UnicodeMap::value_type( 0x004B, "K"),
		UnicodeMap::value_type( 0x004C, "L"),
		UnicodeMap::value_type( 0x004D, "M"),
		UnicodeMap::value_type( 0x004E, "N"),
		UnicodeMap::value_type( 0x004F, "O"),
		UnicodeMap::value_type( 0x0050, "P"),
		UnicodeMap::value_type( 0x0051, "Q"),
		UnicodeMap::value_type( 0x0052, "R"),
		UnicodeMap::value_type( 0x0053, "S"),
		UnicodeMap::value_type( 0x0054, "T"),
		UnicodeMap::value_type( 0x0055, "U"),
		UnicodeMap::value_type( 0x0056, "V"),
		UnicodeMap::value_type( 0x0057, "W"),
		UnicodeMap::value_type( 0x0058, "X"),
		UnicodeMap::value_type( 0x0059, "Y"),
		UnicodeMap::value_type( 0x005A, "Z"),
		UnicodeMap::value_type( 0x005B, "bracketleft"),
		UnicodeMap::value_type( 0x005C, "backslash"),
		UnicodeMap::value_type( 0x005D, "bracketright"),
		UnicodeMap::value_type( 0x005E, "asciicircum"),
		UnicodeMap::value_type( 0x005F, "underscore"),
		UnicodeMap::value_type( 0x0060, "grave"),
		UnicodeMap::value_type( 0x0061, "a"),
		UnicodeMap::value_type( 0x0062, "b"),
		UnicodeMap::value_type( 0x0063, "c"),
		UnicodeMap::value_type( 0x0064, "d"),
		UnicodeMap::value_type( 0x0065, "e"),
		UnicodeMap::value_type( 0x0066, "f"),
		UnicodeMap::value_type( 0x0067, "g"),
		UnicodeMap::value_type( 0x0068, "h"),
		UnicodeMap::value_type( 0x0069, "i"),
		UnicodeMap::value_type( 0x006A, "j"),
		UnicodeMap::value_type( 0x006B, "k"),
		UnicodeMap::value_type( 0x006C, "l"),
		UnicodeMap::value_type( 0x006D, "m"),
		UnicodeMap::value_type( 0x006E, "n"),
		UnicodeMap::value_type( 0x006F, "o"),
		UnicodeMap::value_type( 0x0070, "p"),
		UnicodeMap::value_type( 0x0071, "q"),
		UnicodeMap::value_type( 0x0072, "r"),
		UnicodeMap::value_type( 0x0073, "s"),
		UnicodeMap::value_type( 0x0074, "t"),
		UnicodeMap::value_type( 0x0075, "u"),
		UnicodeMap::value_type( 0x0076, "v"),
		UnicodeMap::value_type( 0x0077, "w"),
		UnicodeMap::value_type( 0x0078, "x"),
		UnicodeMap::value_type( 0x0079, "y"),
		UnicodeMap::value_type( 0x007A, "z"),
		UnicodeMap::value_type( 0x007B, "braceleft"),
		UnicodeMap::value_type( 0x007C, "bar"),
		UnicodeMap::value_type( 0x007D, "braceright"),
		UnicodeMap::value_type( 0x007E, "asciitilde"),
		UnicodeMap::value_type( 0x00A0, "space"),
		UnicodeMap::value_type( 0x00A1, "exclamdown"),
		UnicodeMap::value_type( 0x00A2, "cent"),
		UnicodeMap::value_type( 0x00A3, "sterling"),
		UnicodeMap::value_type( 0x00A4, "currency"),
		UnicodeMap::value_type( 0x00A5, "yen"),
		UnicodeMap::value_type( 0x00A6, "brokenbar"),
		UnicodeMap::value_type( 0x00A7, "section"),
		UnicodeMap::value_type( 0x00A8, "dieresis"),
		UnicodeMap::value_type( 0x00A9, "copyright"),
		UnicodeMap::value_type( 0x00AA, "ordfeminine"),
		UnicodeMap::value_type( 0x00AB, "guillemotleft"),
		UnicodeMap::value_type( 0x00AC, "logicalnot"),
		UnicodeMap::value_type( 0x00AD, "hyphen"),
		UnicodeMap::value_type( 0x00AE, "registered"),
		UnicodeMap::value_type( 0x00AF, "macron"),
		UnicodeMap::value_type( 0x00B0, "degree"),
		UnicodeMap::value_type( 0x00B1, "plusminus"),
		UnicodeMap::value_type( 0x00B2, "twosuperior"),
		UnicodeMap::value_type( 0x00B3, "threesuperior"),
		UnicodeMap::value_type( 0x00B4, "acute"),
		UnicodeMap::value_type( 0x00B5, "mu"),
		UnicodeMap::value_type( 0x00B6, "paragraph"),
		UnicodeMap::value_type( 0x00B7, "periodcentered"),
		UnicodeMap::value_type( 0x00B8, "cedilla"),
		UnicodeMap::value_type( 0x00B9, "onesuperior"),
		UnicodeMap::value_type( 0x00BA, "ordmasculine"),
		UnicodeMap::value_type( 0x00BB, "guillemotright"),
		UnicodeMap::value_type( 0x00BC, "onequarter"),
		UnicodeMap::value_type( 0x00BD, "onehalf"),
		UnicodeMap::value_type( 0x00BE, "threequarters"),
		UnicodeMap::value_type( 0x00BF, "questiondown"),
		UnicodeMap::value_type( 0x00C0, "Agrave"),
		UnicodeMap::value_type( 0x00C1, "Aacute"),
		UnicodeMap::value_type( 0x00C2, "Acircumflex"),
		UnicodeMap::value_type( 0x00C3, "Atilde"),
		UnicodeMap::value_type( 0x00C4, "Adieresis"),
		UnicodeMap::value_type( 0x00C5, "Aring"),
		UnicodeMap::value_type( 0x00C6, "AE"),
		UnicodeMap::value_type( 0x00C7, "Ccedilla"),
		UnicodeMap::value_type( 0x00C8, "Egrave"),
		UnicodeMap::value_type( 0x00C9, "Eacute"),
		UnicodeMap::value_type( 0x00CA, "Ecircumflex"),
		UnicodeMap::value_type( 0x00CB, "Edieresis"),
		UnicodeMap::value_type( 0x00CC, "Igrave"),
		UnicodeMap::value_type( 0x00CD, "Iacute"),
		UnicodeMap::value_type( 0x00CE, "Icircumflex"),
		UnicodeMap::value_type( 0x00CF, "Idieresis"),
		UnicodeMap::value_type( 0x00D0, "Eth"),
		UnicodeMap::value_type( 0x00D1, "Ntilde"),
		UnicodeMap::value_type( 0x00D2, "Ograve"),
		UnicodeMap::value_type( 0x00D3, "Oacute"),
		UnicodeMap::value_type( 0x00D4, "Ocircumflex"),
		UnicodeMap::value_type( 0x00D5, "Otilde"),
		UnicodeMap::value_type( 0x00D6, "Odieresis"),
		UnicodeMap::value_type( 0x00D7, "multiply"),
		UnicodeMap::value_type( 0x00D8, "Oslash"),
		UnicodeMap::value_type( 0x00D9, "Ugrave"),
		UnicodeMap::value_type( 0x00DA, "Uacute"),
		UnicodeMap::value_type( 0x00DB, "Ucircumflex"),
		UnicodeMap::value_type( 0x00DC, "Udieresis"),
		UnicodeMap::value_type( 0x00DD, "Yacute"),
		UnicodeMap::value_type( 0x00DE, "Thorn"),
		UnicodeMap::value_type( 0x00DF, "germandbls"),
		UnicodeMap::value_type( 0x00E0, "agrave"),
		UnicodeMap::value_type( 0x00E1, "aacute"),
		UnicodeMap::value_type( 0x00E2, "acircumflex"),
		UnicodeMap::value_type( 0x00E3, "atilde"),
		UnicodeMap::value_type( 0x00E4, "adieresis"),
		UnicodeMap::value_type( 0x00E5, "aring"),
		UnicodeMap::value_type( 0x00E6, "ae"),
		UnicodeMap::value_type( 0x00E7, "ccedilla"),
		UnicodeMap::value_type( 0x00E8, "egrave"),
		UnicodeMap::value_type( 0x00E9, "eacute"),
		UnicodeMap::value_type( 0x00EA, "ecircumflex"),
		UnicodeMap::value_type( 0x00EB, "edieresis"),
		UnicodeMap::value_type( 0x00EC, "igrave"),
		UnicodeMap::value_type( 0x00ED, "iacute"),
		UnicodeMap::value_type( 0x00EE, "icircumflex"),
		UnicodeMap::value_type( 0x00EF, "idieresis"),
		UnicodeMap::value_type( 0x00F0, "eth"),
		UnicodeMap::value_type( 0x00F1, "ntilde"),
		UnicodeMap::value_type( 0x00F2, "ograve"),
		UnicodeMap::value_type( 0x00F3, "oacute"),
		UnicodeMap::value_type( 0x00F4, "ocircumflex"),
		UnicodeMap::value_type( 0x00F5, "otilde"),
		UnicodeMap::value_type( 0x00F6, "odieresis"),
		UnicodeMap::value_type( 0x00F7, "divide"),
		UnicodeMap::value_type( 0x00F8, "oslash"),
		UnicodeMap::value_type( 0x00F9, "ugrave"),
		UnicodeMap::value_type( 0x00FA, "uacute"),
		UnicodeMap::value_type( 0x00FB, "ucircumflex"),
		UnicodeMap::value_type( 0x00FC, "udieresis"),
		UnicodeMap::value_type( 0x00FD, "yacute"),
		UnicodeMap::value_type( 0x00FE, "thorn"),
		UnicodeMap::value_type( 0x00FF, "ydieresis"),
		UnicodeMap::value_type( 0x0100, "Amacron"),
		UnicodeMap::value_type( 0x0101, "amacron"),
		UnicodeMap::value_type( 0x0102, "Abreve"),
		UnicodeMap::value_type( 0x0103, "abreve"),
		UnicodeMap::value_type( 0x0104, "Aogonek"),
		UnicodeMap::value_type( 0x0105, "aogonek"),
		UnicodeMap::value_type( 0x0106, "Cacute"),
		UnicodeMap::value_type( 0x0107, "cacute"),
		UnicodeMap::value_type( 0x0108, "Ccircumflex"),
		UnicodeMap::value_type( 0x0109, "ccircumflex"),
		UnicodeMap::value_type( 0x010A, "Cdotaccent"),
		UnicodeMap::value_type( 0x010B, "cdotaccent"),
		UnicodeMap::value_type( 0x010C, "Ccaron"),
		UnicodeMap::value_type( 0x010D, "ccaron"),
		UnicodeMap::value_type( 0x010E, "Dcaron"),
		UnicodeMap::value_type( 0x010F, "dcaron"),
		UnicodeMap::value_type( 0x0110, "Dcroat"),
		UnicodeMap::value_type( 0x0111, "dcroat"),
		UnicodeMap::value_type( 0x0112, "Emacron"),
		UnicodeMap::value_type( 0x0113, "emacron"),
		UnicodeMap::value_type( 0x0114, "Ebreve"),
		UnicodeMap::value_type( 0x0115, "ebreve"),
		UnicodeMap::value_type( 0x0116, "Edotaccent"),
		UnicodeMap::value_type( 0x0117, "edotaccent"),
		UnicodeMap::value_type( 0x0118, "Eogonek"),
		UnicodeMap::value_type( 0x0119, "eogonek"),
		UnicodeMap::value_type( 0x011A, "Ecaron"),
		UnicodeMap::value_type( 0x011B, "ecaron"),
		UnicodeMap::value_type( 0x011C, "Gcircumflex"),
		UnicodeMap::value_type( 0x011D, "gcircumflex"),
		UnicodeMap::value_type( 0x011E, "Gbreve"),
		UnicodeMap::value_type( 0x011F, "gbreve"),
		UnicodeMap::value_type( 0x0120, "Gdotaccent"),
		UnicodeMap::value_type( 0x0121, "gdotaccent"),
		UnicodeMap::value_type( 0x0122, "Gcommaaccent"),
		UnicodeMap::value_type( 0x0123, "gcommaaccent"),
		UnicodeMap::value_type( 0x0124, "Hcircumflex"),
		UnicodeMap::value_type( 0x0125, "hcircumflex"),
		UnicodeMap::value_type( 0x0126, "Hbar"),
		UnicodeMap::value_type( 0x0127, "hbar"),
		UnicodeMap::value_type( 0x0128, "Itilde"),
		UnicodeMap::value_type( 0x0129, "itilde"),
		UnicodeMap::value_type( 0x012A, "Imacron"),
		UnicodeMap::value_type( 0x012B, "imacron"),
		UnicodeMap::value_type( 0x012C, "Ibreve"),
		UnicodeMap::value_type( 0x012D, "ibreve"),
		UnicodeMap::value_type( 0x012E, "Iogonek"),
		UnicodeMap::value_type( 0x012F, "iogonek"),
		UnicodeMap::value_type( 0x0130, "Idotaccent"),
		UnicodeMap::value_type( 0x0131, "dotlessi"),
		UnicodeMap::value_type( 0x0132, "IJ"),
		UnicodeMap::value_type( 0x0133, "ij"),
		UnicodeMap::value_type( 0x0134, "Jcircumflex"),
		UnicodeMap::value_type( 0x0135, "jcircumflex"),
		UnicodeMap::value_type( 0x0136, "Kcommaaccent"),
		UnicodeMap::value_type( 0x0137, "kcommaaccent"),
		UnicodeMap::value_type( 0x0138, "kgreenlandic"),
		UnicodeMap::value_type( 0x0139, "Lacute"),
		UnicodeMap::value_type( 0x013A, "lacute"),
		UnicodeMap::value_type( 0x013B, "Lcommaaccent"),
		UnicodeMap::value_type( 0x013C, "lcommaaccent"),
		UnicodeMap::value_type( 0x013D, "Lcaron"),
		UnicodeMap::value_type( 0x013E, "lcaron"),
		UnicodeMap::value_type( 0x013F, "Ldot"),
		UnicodeMap::value_type( 0x0140, "ldot"),
		UnicodeMap::value_type( 0x0141, "Lslash"),
		UnicodeMap::value_type( 0x0142, "lslash"),
		UnicodeMap::value_type( 0x0143, "Nacute"),
		UnicodeMap::value_type( 0x0144, "nacute"),
		UnicodeMap::value_type( 0x0145, "Ncommaaccent"),
		UnicodeMap::value_type( 0x0146, "ncommaaccent"),
		UnicodeMap::value_type( 0x0147, "Ncaron"),
		UnicodeMap::value_type( 0x0148, "ncaron"),
		UnicodeMap::value_type( 0x0149, "napostrophe"),
		UnicodeMap::value_type( 0x014A, "Eng"),
		UnicodeMap::value_type( 0x014B, "eng"),
		UnicodeMap::value_type( 0x014C, "Omacron"),
		UnicodeMap::value_type( 0x014D, "omacron"),
		UnicodeMap::value_type( 0x014E, "Obreve"),
		UnicodeMap::value_type( 0x014F, "obreve"),
		UnicodeMap::value_type( 0x0150, "Ohungarumlaut"),
		UnicodeMap::value_type( 0x0151, "ohungarumlaut"),
		UnicodeMap::value_type( 0x0152, "OE"),
		UnicodeMap::value_type( 0x0153, "oe"),
		UnicodeMap::value_type( 0x0154, "Racute"),
		UnicodeMap::value_type( 0x0155, "racute"),
		UnicodeMap::value_type( 0x0156, "Rcommaaccent"),
		UnicodeMap::value_type( 0x0157, "rcommaaccent"),
		UnicodeMap::value_type( 0x0158, "Rcaron"),
		UnicodeMap::value_type( 0x0159, "rcaron"),
		UnicodeMap::value_type( 0x015A, "Sacute"),
		UnicodeMap::value_type( 0x015B, "sacute"),
		UnicodeMap::value_type( 0x015C, "Scircumflex"),
		UnicodeMap::value_type( 0x015D, "scircumflex"),
		UnicodeMap::value_type( 0x015E, "Scedilla"),
		UnicodeMap::value_type( 0x015F, "scedilla"),
		UnicodeMap::value_type( 0x0160, "Scaron"),
		UnicodeMap::value_type( 0x0161, "scaron"),
		UnicodeMap::value_type( 0x0162, "Tcommaaccent"),
		UnicodeMap::value_type( 0x0163, "tcommaaccent"),
		UnicodeMap::value_type( 0x0164, "Tcaron"),
		UnicodeMap::value_type( 0x0165, "tcaron"),
		UnicodeMap::value_type( 0x0166, "Tbar"),
		UnicodeMap::value_type( 0x0167, "tbar"),
		UnicodeMap::value_type( 0x0168, "Utilde"),
		UnicodeMap::value_type( 0x0169, "utilde"),
		UnicodeMap::value_type( 0x016A, "Umacron"),
		UnicodeMap::value_type( 0x016B, "umacron"),
		UnicodeMap::value_type( 0x016C, "Ubreve"),
		UnicodeMap::value_type( 0x016D, "ubreve"),
		UnicodeMap::value_type( 0x016E, "Uring"),
		UnicodeMap::value_type( 0x016F, "uring"),
		UnicodeMap::value_type( 0x0170, "Uhungarumlaut"),
		UnicodeMap::value_type( 0x0171, "uhungarumlaut"),
		UnicodeMap::value_type( 0x0172, "Uogonek"),
		UnicodeMap::value_type( 0x0173, "uogonek"),
		UnicodeMap::value_type( 0x0174, "Wcircumflex"),
		UnicodeMap::value_type( 0x0175, "wcircumflex"),
		UnicodeMap::value_type( 0x0176, "Ycircumflex"),
		UnicodeMap::value_type( 0x0177, "ycircumflex"),
		UnicodeMap::value_type( 0x0178, "Ydieresis"),
		UnicodeMap::value_type( 0x0179, "Zacute"),
		UnicodeMap::value_type( 0x017A, "zacute"),
		UnicodeMap::value_type( 0x017B, "Zdotaccent"),
		UnicodeMap::value_type( 0x017C, "zdotaccent"),
		UnicodeMap::value_type( 0x017D, "Zcaron"),
		UnicodeMap::value_type( 0x017E, "zcaron"),
		UnicodeMap::value_type( 0x017F, "longs"),
		UnicodeMap::value_type( 0x0192, "florin"),
		UnicodeMap::value_type( 0x01A0, "Ohorn"),
		UnicodeMap::value_type( 0x01A1, "ohorn"),
		UnicodeMap::value_type( 0x01AF, "Uhorn"),
		UnicodeMap::value_type( 0x01B0, "uhorn"),
		UnicodeMap::value_type( 0x01E6, "Gcaron"),
		UnicodeMap::value_type( 0x01E7, "gcaron"),
		UnicodeMap::value_type( 0x01FA, "Aringacute"),
		UnicodeMap::value_type( 0x01FB, "aringacute"),
		UnicodeMap::value_type( 0x01FC, "AEacute"),
		UnicodeMap::value_type( 0x01FD, "aeacute"),
		UnicodeMap::value_type( 0x01FE, "Oslashacute"),
		UnicodeMap::value_type( 0x01FF, "oslashacute"),
		UnicodeMap::value_type( 0x0218, "Scommaaccent"),
		UnicodeMap::value_type( 0x0219, "scommaaccent"),
		UnicodeMap::value_type( 0x021A, "Tcommaaccent"),
		UnicodeMap::value_type( 0x021B, "tcommaaccent"),
		UnicodeMap::value_type( 0x02BC, "afii57929"),
		UnicodeMap::value_type( 0x02BD, "afii64937"),
		UnicodeMap::value_type( 0x02C6, "circumflex"),
		UnicodeMap::value_type( 0x02C7, "caron"),
		UnicodeMap::value_type( 0x02C9, "macron"),
		UnicodeMap::value_type( 0x02D8, "breve"),
		UnicodeMap::value_type( 0x02D9, "dotaccent"),
		UnicodeMap::value_type( 0x02DA, "ring"),
		UnicodeMap::value_type( 0x02DB, "ogonek"),
		UnicodeMap::value_type( 0x02DC, "tilde"),
		UnicodeMap::value_type( 0x02DD, "hungarumlaut"),
		UnicodeMap::value_type( 0x0300, "gravecomb"),
		UnicodeMap::value_type( 0x0301, "acutecomb"),
		UnicodeMap::value_type( 0x0303, "tildecomb"),
		UnicodeMap::value_type( 0x0309, "hookabovecomb"),
		UnicodeMap::value_type( 0x0323, "dotbelowcomb"),
		UnicodeMap::value_type( 0x0384, "tonos"),
		UnicodeMap::value_type( 0x0385, "dieresistonos"),
		UnicodeMap::value_type( 0x0386, "Alphatonos"),
		UnicodeMap::value_type( 0x0387, "anoteleia"),
		UnicodeMap::value_type( 0x0388, "Epsilontonos"),
		UnicodeMap::value_type( 0x0389, "Etatonos"),
		UnicodeMap::value_type( 0x038A, "Iotatonos"),
		UnicodeMap::value_type( 0x038C, "Omicrontonos"),
		UnicodeMap::value_type( 0x038E, "Upsilontonos"),
		UnicodeMap::value_type( 0x038F, "Omegatonos"),
		UnicodeMap::value_type( 0x0390, "iotadieresistonos"),
		UnicodeMap::value_type( 0x0391, "Alpha"),
		UnicodeMap::value_type( 0x0392, "Beta"),
		UnicodeMap::value_type( 0x0393, "Gamma"),
		UnicodeMap::value_type( 0x0394, "Delta"),
		UnicodeMap::value_type( 0x0395, "Epsilon"),
		UnicodeMap::value_type( 0x0396, "Zeta"),
		UnicodeMap::value_type( 0x0397, "Eta"),
		UnicodeMap::value_type( 0x0398, "Theta"),
		UnicodeMap::value_type( 0x0399, "Iota"),
		UnicodeMap::value_type( 0x039A, "Kappa"),
		UnicodeMap::value_type( 0x039B, "Lambda"),
		UnicodeMap::value_type( 0x039C, "Mu"),
		UnicodeMap::value_type( 0x039D, "Nu"),
		UnicodeMap::value_type( 0x039E, "Xi"),
		UnicodeMap::value_type( 0x039F, "Omicron"),
		UnicodeMap::value_type( 0x03A0, "Pi"),
		UnicodeMap::value_type( 0x03A1, "Rho"),
		UnicodeMap::value_type( 0x03A3, "Sigma"),
		UnicodeMap::value_type( 0x03A4, "Tau"),
		UnicodeMap::value_type( 0x03A5, "Upsilon"),
		UnicodeMap::value_type( 0x03A6, "Phi"),
		UnicodeMap::value_type( 0x03A7, "Chi"),
		UnicodeMap::value_type( 0x03A8, "Psi"),
		UnicodeMap::value_type( 0x03A9, "Omega"),
		UnicodeMap::value_type( 0x03AA, "Iotadieresis"),
		UnicodeMap::value_type( 0x03AB, "Upsilondieresis"),
		UnicodeMap::value_type( 0x03AC, "alphatonos"),
		UnicodeMap::value_type( 0x03AD, "epsilontonos"),
		UnicodeMap::value_type( 0x03AE, "etatonos"),
		UnicodeMap::value_type( 0x03AF, "iotatonos"),
		UnicodeMap::value_type( 0x03B0, "upsilondieresistonos"),
		UnicodeMap::value_type( 0x03B1, "alpha"),
		UnicodeMap::value_type( 0x03B2, "beta"),
		UnicodeMap::value_type( 0x03B3, "gamma"),
		UnicodeMap::value_type( 0x03B4, "delta"),
		UnicodeMap::value_type( 0x03B5, "epsilon"),
		UnicodeMap::value_type( 0x03B6, "zeta"),
		UnicodeMap::value_type( 0x03B7, "eta"),
		UnicodeMap::value_type( 0x03B8, "theta"),
		UnicodeMap::value_type( 0x03B9, "iota"),
		UnicodeMap::value_type( 0x03BA, "kappa"),
		UnicodeMap::value_type( 0x03BB, "lambda"),
		UnicodeMap::value_type( 0x03BC, "mu"),
		UnicodeMap::value_type( 0x03BD, "nu"),
		UnicodeMap::value_type( 0x03BE, "xi"),
		UnicodeMap::value_type( 0x03BF, "omicron"),
		UnicodeMap::value_type( 0x03C0, "pi"),
		UnicodeMap::value_type( 0x03C1, "rho"),
		UnicodeMap::value_type( 0x03C2, "sigma1"),
		UnicodeMap::value_type( 0x03C3, "sigma"),
		UnicodeMap::value_type( 0x03C4, "tau"),
		UnicodeMap::value_type( 0x03C5, "upsilon"),
		UnicodeMap::value_type( 0x03C6, "phi"),
		UnicodeMap::value_type( 0x03C7, "chi"),
		UnicodeMap::value_type( 0x03C8, "psi"),
		UnicodeMap::value_type( 0x03C9, "omega"),
		UnicodeMap::value_type( 0x03CA, "iotadieresis"),
		UnicodeMap::value_type( 0x03CB, "upsilondieresis"),
		UnicodeMap::value_type( 0x03CC, "omicrontonos"),
		UnicodeMap::value_type( 0x03CD, "upsilontonos"),
		UnicodeMap::value_type( 0x03CE, "omegatonos"),
		UnicodeMap::value_type( 0x03D1, "theta1"),
		UnicodeMap::value_type( 0x03D2, "Upsilon1"),
		UnicodeMap::value_type( 0x03D5, "phi1"),
		UnicodeMap::value_type( 0x03D6, "omega1"),
		UnicodeMap::value_type( 0x0401, "afii10023"),
		UnicodeMap::value_type( 0x0402, "afii10051"),
		UnicodeMap::value_type( 0x0403, "afii10052"),
		UnicodeMap::value_type( 0x0404, "afii10053"),
		UnicodeMap::value_type( 0x0405, "afii10054"),
		UnicodeMap::value_type( 0x0406, "afii10055"),
		UnicodeMap::value_type( 0x0407, "afii10056"),
		UnicodeMap::value_type( 0x0408, "afii10057"),
		UnicodeMap::value_type( 0x0409, "afii10058"),
		UnicodeMap::value_type( 0x040A, "afii10059"),
		UnicodeMap::value_type( 0x040B, "afii10060"),
		UnicodeMap::value_type( 0x040C, "afii10061"),
		UnicodeMap::value_type( 0x040E, "afii10062"),
		UnicodeMap::value_type( 0x040F, "afii10145"),
		UnicodeMap::value_type( 0x0410, "afii10017"),
		UnicodeMap::value_type( 0x0411, "afii10018"),
		UnicodeMap::value_type( 0x0412, "afii10019"),
		UnicodeMap::value_type( 0x0413, "afii10020"),
		UnicodeMap::value_type( 0x0414, "afii10021"),
		UnicodeMap::value_type( 0x0415, "afii10022"),
		UnicodeMap::value_type( 0x0416, "afii10024"),
		UnicodeMap::value_type( 0x0417, "afii10025"),
		UnicodeMap::value_type( 0x0418, "afii10026"),
		UnicodeMap::value_type( 0x0419, "afii10027"),
		UnicodeMap::value_type( 0x041A, "afii10028"),
		UnicodeMap::value_type( 0x041B, "afii10029"),
		UnicodeMap::value_type( 0x041C, "afii10030"),
		UnicodeMap::value_type( 0x041D, "afii10031"),
		UnicodeMap::value_type( 0x041E, "afii10032"),
		UnicodeMap::value_type( 0x041F, "afii10033"),
		UnicodeMap::value_type( 0x0420, "afii10034"),
		UnicodeMap::value_type( 0x0421, "afii10035"),
		UnicodeMap::value_type( 0x0422, "afii10036"),
		UnicodeMap::value_type( 0x0423, "afii10037"),
		UnicodeMap::value_type( 0x0424, "afii10038"),
		UnicodeMap::value_type( 0x0425, "afii10039"),
		UnicodeMap::value_type( 0x0426, "afii10040"),
		UnicodeMap::value_type( 0x0427, "afii10041"),
		UnicodeMap::value_type( 0x0428, "afii10042"),
		UnicodeMap::value_type( 0x0429, "afii10043"),
		UnicodeMap::value_type( 0x042A, "afii10044"),
		UnicodeMap::value_type( 0x042B, "afii10045"),
		UnicodeMap::value_type( 0x042C, "afii10046"),
		UnicodeMap::value_type( 0x042D, "afii10047"),
		UnicodeMap::value_type( 0x042E, "afii10048"),
		UnicodeMap::value_type( 0x042F, "afii10049"),
		UnicodeMap::value_type( 0x0430, "afii10065"),
		UnicodeMap::value_type( 0x0431, "afii10066"),
		UnicodeMap::value_type( 0x0432, "afii10067"),
		UnicodeMap::value_type( 0x0433, "afii10068"),
		UnicodeMap::value_type( 0x0434, "afii10069"),
		UnicodeMap::value_type( 0x0435, "afii10070"),
		UnicodeMap::value_type( 0x0436, "afii10072"),
		UnicodeMap::value_type( 0x0437, "afii10073"),
		UnicodeMap::value_type( 0x0438, "afii10074"),
		UnicodeMap::value_type( 0x0439, "afii10075"),
		UnicodeMap::value_type( 0x043A, "afii10076"),
		UnicodeMap::value_type( 0x043B, "afii10077"),
		UnicodeMap::value_type( 0x043C, "afii10078"),
		UnicodeMap::value_type( 0x043D, "afii10079"),
		UnicodeMap::value_type( 0x043E, "afii10080"),
		UnicodeMap::value_type( 0x043F, "afii10081"),
		UnicodeMap::value_type( 0x0440, "afii10082"),
		UnicodeMap::value_type( 0x0441, "afii10083"),
		UnicodeMap::value_type( 0x0442, "afii10084"),
		UnicodeMap::value_type( 0x0443, "afii10085"),
		UnicodeMap::value_type( 0x0444, "afii10086"),
		UnicodeMap::value_type( 0x0445, "afii10087"),
		UnicodeMap::value_type( 0x0446, "afii10088"),
		UnicodeMap::value_type( 0x0447, "afii10089"),
		UnicodeMap::value_type( 0x0448, "afii10090"),
		UnicodeMap::value_type( 0x0449, "afii10091"),
		UnicodeMap::value_type( 0x044A, "afii10092"),
		UnicodeMap::value_type( 0x044B, "afii10093"),
		UnicodeMap::value_type( 0x044C, "afii10094"),
		UnicodeMap::value_type( 0x044D, "afii10095"),
		UnicodeMap::value_type( 0x044E, "afii10096"),
		UnicodeMap::value_type( 0x044F, "afii10097"),
		UnicodeMap::value_type( 0x0451, "afii10071"),
		UnicodeMap::value_type( 0x0452, "afii10099"),
		UnicodeMap::value_type( 0x0453, "afii10100"),
		UnicodeMap::value_type( 0x0454, "afii10101"),
		UnicodeMap::value_type( 0x0455, "afii10102"),
		UnicodeMap::value_type( 0x0456, "afii10103"),
		UnicodeMap::value_type( 0x0457, "afii10104"),
		UnicodeMap::value_type( 0x0458, "afii10105"),
		UnicodeMap::value_type( 0x0459, "afii10106"),
		UnicodeMap::value_type( 0x045A, "afii10107"),
		UnicodeMap::value_type( 0x045B, "afii10108"),
		UnicodeMap::value_type( 0x045C, "afii10109"),
		UnicodeMap::value_type( 0x045E, "afii10110"),
		UnicodeMap::value_type( 0x045F, "afii10193"),
		UnicodeMap::value_type( 0x0462, "afii10146"),
		UnicodeMap::value_type( 0x0463, "afii10194"),
		UnicodeMap::value_type( 0x0472, "afii10147"),
		UnicodeMap::value_type( 0x0473, "afii10195"),
		UnicodeMap::value_type( 0x0474, "afii10148"),
		UnicodeMap::value_type( 0x0475, "afii10196"),
		UnicodeMap::value_type( 0x0490, "afii10050"),
		UnicodeMap::value_type( 0x0491, "afii10098"),
		UnicodeMap::value_type( 0x04D9, "afii10846"),
		UnicodeMap::value_type( 0x05B0, "afii57799"),
		UnicodeMap::value_type( 0x05B1, "afii57801"),
		UnicodeMap::value_type( 0x05B2, "afii57800"),
		UnicodeMap::value_type( 0x05B3, "afii57802"),
		UnicodeMap::value_type( 0x05B4, "afii57793"),
		UnicodeMap::value_type( 0x05B5, "afii57794"),
		UnicodeMap::value_type( 0x05B6, "afii57795"),
		UnicodeMap::value_type( 0x05B7, "afii57798"),
		UnicodeMap::value_type( 0x05B8, "afii57797"),
		UnicodeMap::value_type( 0x05B9, "afii57806"),
		UnicodeMap::value_type( 0x05BB, "afii57796"),
		UnicodeMap::value_type( 0x05BC, "afii57807"),
		UnicodeMap::value_type( 0x05BD, "afii57839"),
		UnicodeMap::value_type( 0x05BE, "afii57645"),
		UnicodeMap::value_type( 0x05BF, "afii57841"),
		UnicodeMap::value_type( 0x05C0, "afii57842"),
		UnicodeMap::value_type( 0x05C1, "afii57804"),
		UnicodeMap::value_type( 0x05C2, "afii57803"),
		UnicodeMap::value_type( 0x05C3, "afii57658"),
		UnicodeMap::value_type( 0x05D0, "afii57664"),
		UnicodeMap::value_type( 0x05D1, "afii57665"),
		UnicodeMap::value_type( 0x05D2, "afii57666"),
		UnicodeMap::value_type( 0x05D3, "afii57667"),
		UnicodeMap::value_type( 0x05D4, "afii57668"),
		UnicodeMap::value_type( 0x05D5, "afii57669"),
		UnicodeMap::value_type( 0x05D6, "afii57670"),
		UnicodeMap::value_type( 0x05D7, "afii57671"),
		UnicodeMap::value_type( 0x05D8, "afii57672"),
		UnicodeMap::value_type( 0x05D9, "afii57673"),
		UnicodeMap::value_type( 0x05DA, "afii57674"),
		UnicodeMap::value_type( 0x05DB, "afii57675"),
		UnicodeMap::value_type( 0x05DC, "afii57676"),
		UnicodeMap::value_type( 0x05DD, "afii57677"),
		UnicodeMap::value_type( 0x05DE, "afii57678"),
		UnicodeMap::value_type( 0x05DF, "afii57679"),
		UnicodeMap::value_type( 0x05E0, "afii57680"),
		UnicodeMap::value_type( 0x05E1, "afii57681"),
		UnicodeMap::value_type( 0x05E2, "afii57682"),
		UnicodeMap::value_type( 0x05E3, "afii57683"),
		UnicodeMap::value_type( 0x05E4, "afii57684"),
		UnicodeMap::value_type( 0x05E5, "afii57685"),
		UnicodeMap::value_type( 0x05E6, "afii57686"),
		UnicodeMap::value_type( 0x05E7, "afii57687"),
		UnicodeMap::value_type( 0x05E8, "afii57688"),
		UnicodeMap::value_type( 0x05E9, "afii57689"),
		UnicodeMap::value_type( 0x05EA, "afii57690"),
		UnicodeMap::value_type( 0x05F0, "afii57716"),
		UnicodeMap::value_type( 0x05F1, "afii57717"),
		UnicodeMap::value_type( 0x05F2, "afii57718"),
		UnicodeMap::value_type( 0x060C, "afii57388"),
		UnicodeMap::value_type( 0x061B, "afii57403"),
		UnicodeMap::value_type( 0x061F, "afii57407"),
		UnicodeMap::value_type( 0x0621, "afii57409"),
		UnicodeMap::value_type( 0x0622, "afii57410"),
		UnicodeMap::value_type( 0x0623, "afii57411"),
		UnicodeMap::value_type( 0x0624, "afii57412"),
		UnicodeMap::value_type( 0x0625, "afii57413"),
		UnicodeMap::value_type( 0x0626, "afii57414"),
		UnicodeMap::value_type( 0x0627, "afii57415"),
		UnicodeMap::value_type( 0x0628, "afii57416"),
		UnicodeMap::value_type( 0x0629, "afii57417"),
		UnicodeMap::value_type( 0x062A, "afii57418"),
		UnicodeMap::value_type( 0x062B, "afii57419"),
		UnicodeMap::value_type( 0x062C, "afii57420"),
		UnicodeMap::value_type( 0x062D, "afii57421"),
		UnicodeMap::value_type( 0x062E, "afii57422"),
		UnicodeMap::value_type( 0x062F, "afii57423"),
		UnicodeMap::value_type( 0x0630, "afii57424"),
		UnicodeMap::value_type( 0x0631, "afii57425"),
		UnicodeMap::value_type( 0x0632, "afii57426"),
		UnicodeMap::value_type( 0x0633, "afii57427"),
		UnicodeMap::value_type( 0x0634, "afii57428"),
		UnicodeMap::value_type( 0x0635, "afii57429"),
		UnicodeMap::value_type( 0x0636, "afii57430"),
		UnicodeMap::value_type( 0x0637, "afii57431"),
		UnicodeMap::value_type( 0x0638, "afii57432"),
		UnicodeMap::value_type( 0x0639, "afii57433"),
		UnicodeMap::value_type( 0x063A, "afii57434"),
		UnicodeMap::value_type( 0x0640, "afii57440"),
		UnicodeMap::value_type( 0x0641, "afii57441"),
		UnicodeMap::value_type( 0x0642, "afii57442"),
		UnicodeMap::value_type( 0x0643, "afii57443"),
		UnicodeMap::value_type( 0x0644, "afii57444"),
		UnicodeMap::value_type( 0x0645, "afii57445"),
		UnicodeMap::value_type( 0x0646, "afii57446"),
		UnicodeMap::value_type( 0x0647, "afii57470"),
		UnicodeMap::value_type( 0x0648, "afii57448"),
		UnicodeMap::value_type( 0x0649, "afii57449"),
		UnicodeMap::value_type( 0x064A, "afii57450"),
		UnicodeMap::value_type( 0x064B, "afii57451"),
		UnicodeMap::value_type( 0x064C, "afii57452"),
		UnicodeMap::value_type( 0x064D, "afii57453"),
		UnicodeMap::value_type( 0x064E, "afii57454"),
		UnicodeMap::value_type( 0x064F, "afii57455"),
		UnicodeMap::value_type( 0x0650, "afii57456"),
		UnicodeMap::value_type( 0x0651, "afii57457"),
		UnicodeMap::value_type( 0x0652, "afii57458"),
		UnicodeMap::value_type( 0x0660, "afii57392"),
		UnicodeMap::value_type( 0x0661, "afii57393"),
		UnicodeMap::value_type( 0x0662, "afii57394"),
		UnicodeMap::value_type( 0x0663, "afii57395"),
		UnicodeMap::value_type( 0x0664, "afii57396"),
		UnicodeMap::value_type( 0x0665, "afii57397"),
		UnicodeMap::value_type( 0x0666, "afii57398"),
		UnicodeMap::value_type( 0x0667, "afii57399"),
		UnicodeMap::value_type( 0x0668, "afii57400"),
		UnicodeMap::value_type( 0x0669, "afii57401"),
		UnicodeMap::value_type( 0x066A, "afii57381"),
		UnicodeMap::value_type( 0x066D, "afii63167"),
		UnicodeMap::value_type( 0x0679, "afii57511"),
		UnicodeMap::value_type( 0x067E, "afii57506"),
		UnicodeMap::value_type( 0x0686, "afii57507"),
		UnicodeMap::value_type( 0x0688, "afii57512"),
		UnicodeMap::value_type( 0x0691, "afii57513"),
		UnicodeMap::value_type( 0x0698, "afii57508"),
		UnicodeMap::value_type( 0x06A4, "afii57505"),
		UnicodeMap::value_type( 0x06AF, "afii57509"),
		UnicodeMap::value_type( 0x06BA, "afii57514"),
		UnicodeMap::value_type( 0x06D2, "afii57519"),
		UnicodeMap::value_type( 0x06D5, "afii57534"),
		UnicodeMap::value_type( 0x1E80, "Wgrave"),
		UnicodeMap::value_type( 0x1E81, "wgrave"),
		UnicodeMap::value_type( 0x1E82, "Wacute"),
		UnicodeMap::value_type( 0x1E83, "wacute"),
		UnicodeMap::value_type( 0x1E84, "Wdieresis"),
		UnicodeMap::value_type( 0x1E85, "wdieresis"),
		UnicodeMap::value_type( 0x1EF2, "Ygrave"),
		UnicodeMap::value_type( 0x1EF3, "ygrave"),
		UnicodeMap::value_type( 0x200C, "afii61664"),
		UnicodeMap::value_type( 0x200D, "afii301"),
		UnicodeMap::value_type( 0x200E, "afii299"),
		UnicodeMap::value_type( 0x200F, "afii300"),
		UnicodeMap::value_type( 0x2012, "figuredash"),
		UnicodeMap::value_type( 0x2013, "endash"),
		UnicodeMap::value_type( 0x2014, "emdash"),
		UnicodeMap::value_type( 0x2015, "afii00208"),
		UnicodeMap::value_type( 0x2017, "underscoredbl"),
		UnicodeMap::value_type( 0x2018, "quoteleft"),
		UnicodeMap::value_type( 0x2019, "quoteright"),
		UnicodeMap::value_type( 0x201A, "quotesinglbase"),
		UnicodeMap::value_type( 0x201B, "quotereversed"),
		UnicodeMap::value_type( 0x201C, "quotedblleft"),
		UnicodeMap::value_type( 0x201D, "quotedblright"),
		UnicodeMap::value_type( 0x201E, "quotedblbase"),
		UnicodeMap::value_type( 0x2020, "dagger"),
		UnicodeMap::value_type( 0x2021, "daggerdbl"),
		UnicodeMap::value_type( 0x2022, "bullet"),
		UnicodeMap::value_type( 0x2024, "onedotenleader"),
		UnicodeMap::value_type( 0x2025, "twodotenleader"),
		UnicodeMap::value_type( 0x2026, "ellipsis"),
		UnicodeMap::value_type( 0x202C, "afii61573"),
		UnicodeMap::value_type( 0x202D, "afii61574"),
		UnicodeMap::value_type( 0x202E, "afii61575"),
		UnicodeMap::value_type( 0x2030, "perthousand"),
		UnicodeMap::value_type( 0x2032, "minute"),
		UnicodeMap::value_type( 0x2033, "second"),
		UnicodeMap::value_type( 0x2039, "guilsinglleft"),
		UnicodeMap::value_type( 0x203A, "guilsinglright"),
		UnicodeMap::value_type( 0x203C, "exclamdbl"),
		UnicodeMap::value_type( 0x2044, "fraction"),
		UnicodeMap::value_type( 0x2070, "zerosuperior"),
		UnicodeMap::value_type( 0x2074, "foursuperior"),
		UnicodeMap::value_type( 0x2075, "fivesuperior"),
		UnicodeMap::value_type( 0x2076, "sixsuperior"),
		UnicodeMap::value_type( 0x2077, "sevensuperior"),
		UnicodeMap::value_type( 0x2078, "eightsuperior"),
		UnicodeMap::value_type( 0x2079, "ninesuperior"),
		UnicodeMap::value_type( 0x207D, "parenleftsuperior"),
		UnicodeMap::value_type( 0x207E, "parenrightsuperior"),
		UnicodeMap::value_type( 0x207F, "nsuperior"),
		UnicodeMap::value_type( 0x2080, "zeroinferior"),
		UnicodeMap::value_type( 0x2081, "oneinferior"),
		UnicodeMap::value_type( 0x2082, "twoinferior"),
		UnicodeMap::value_type( 0x2083, "threeinferior"),
		UnicodeMap::value_type( 0x2084, "fourinferior"),
		UnicodeMap::value_type( 0x2085, "fiveinferior"),
		UnicodeMap::value_type( 0x2086, "sixinferior"),
		UnicodeMap::value_type( 0x2087, "seveninferior"),
		UnicodeMap::value_type( 0x2088, "eightinferior"),
		UnicodeMap::value_type( 0x2089, "nineinferior"),
		UnicodeMap::value_type( 0x208D, "parenleftinferior"),
		UnicodeMap::value_type( 0x208E, "parenrightinferior"),
		UnicodeMap::value_type( 0x20A1, "colonmonetary"),
		UnicodeMap::value_type( 0x20A3, "franc"),
		UnicodeMap::value_type( 0x20A4, "lira"),
		UnicodeMap::value_type( 0x20A7, "peseta"),
		UnicodeMap::value_type( 0x20AA, "afii57636"),
		UnicodeMap::value_type( 0x20AB, "dong"),
		UnicodeMap::value_type( 0x20AC, "Euro"),
		UnicodeMap::value_type( 0x2105, "afii61248"),
		UnicodeMap::value_type( 0x2111, "Ifraktur"),
		UnicodeMap::value_type( 0x2113, "afii61289"),
		UnicodeMap::value_type( 0x2116, "afii61352"),
		UnicodeMap::value_type( 0x2118, "weierstrass"),
		UnicodeMap::value_type( 0x211C, "Rfraktur"),
		UnicodeMap::value_type( 0x211E, "prescription"),
		UnicodeMap::value_type( 0x2122, "trademark"),
		UnicodeMap::value_type( 0x2126, "Omega"),
		UnicodeMap::value_type( 0x212E, "estimated"),
		UnicodeMap::value_type( 0x2135, "aleph"),
		UnicodeMap::value_type( 0x2153, "onethird"),
		UnicodeMap::value_type( 0x2154, "twothirds"),
		UnicodeMap::value_type( 0x215B, "oneeighth"),
		UnicodeMap::value_type( 0x215C, "threeeighths"),
		UnicodeMap::value_type( 0x215D, "fiveeighths"),
		UnicodeMap::value_type( 0x215E, "seveneighths"),
		UnicodeMap::value_type( 0x2190, "arrowleft"),
		UnicodeMap::value_type( 0x2191, "arrowup"),
		UnicodeMap::value_type( 0x2192, "arrowright"),
		UnicodeMap::value_type( 0x2193, "arrowdown"),
		UnicodeMap::value_type( 0x2194, "arrowboth"),
		UnicodeMap::value_type( 0x2195, "arrowupdn"),
		UnicodeMap::value_type( 0x21A8, "arrowupdnbse"),
		UnicodeMap::value_type( 0x21B5, "carriagereturn"),
		UnicodeMap::value_type( 0x21D0, "arrowdblleft"),
		UnicodeMap::value_type( 0x21D1, "arrowdblup"),
		UnicodeMap::value_type( 0x21D2, "arrowdblright"),
		UnicodeMap::value_type( 0x21D3, "arrowdbldown"),
		UnicodeMap::value_type( 0x21D4, "arrowdblboth"),
		UnicodeMap::value_type( 0x2200, "universal"),
		UnicodeMap::value_type( 0x2202, "partialdiff"),
		UnicodeMap::value_type( 0x2203, "existential"),
		UnicodeMap::value_type( 0x2205, "emptyset"),
		UnicodeMap::value_type( 0x2206, "Delta"),
		UnicodeMap::value_type( 0x2207, "gradient"),
		UnicodeMap::value_type( 0x2208, "element"),
		UnicodeMap::value_type( 0x2209, "notelement"),
		UnicodeMap::value_type( 0x220B, "suchthat"),
		UnicodeMap::value_type( 0x220F, "product"),
		UnicodeMap::value_type( 0x2211, "summation"),
		UnicodeMap::value_type( 0x2212, "minus"),
		UnicodeMap::value_type( 0x2215, "fraction"),
		UnicodeMap::value_type( 0x2217, "asteriskmath"),
		UnicodeMap::value_type( 0x2219, "periodcentered"),
		UnicodeMap::value_type( 0x221A, "radical"),
		UnicodeMap::value_type( 0x221D, "proportional"),
		UnicodeMap::value_type( 0x221E, "infinity"),
		UnicodeMap::value_type( 0x221F, "orthogonal"),
		UnicodeMap::value_type( 0x2220, "angle"),
		UnicodeMap::value_type( 0x2227, "logicaland"),
		UnicodeMap::value_type( 0x2228, "logicalor"),
		UnicodeMap::value_type( 0x2229, "intersection"),
		UnicodeMap::value_type( 0x222A, "union"),
		UnicodeMap::value_type( 0x222B, "integral"),
		UnicodeMap::value_type( 0x2234, "therefore"),
		UnicodeMap::value_type( 0x223C, "similar"),
		UnicodeMap::value_type( 0x2245, "congruent"),
		UnicodeMap::value_type( 0x2248, "approxequal"),
		UnicodeMap::value_type( 0x2260, "notequal"),
		UnicodeMap::value_type( 0x2261, "equivalence"),
		UnicodeMap::value_type( 0x2264, "lessequal"),
		UnicodeMap::value_type( 0x2265, "greaterequal"),
		UnicodeMap::value_type( 0x2282, "propersubset"),
		UnicodeMap::value_type( 0x2283, "propersuperset"),
		UnicodeMap::value_type( 0x2284, "notsubset"),
		UnicodeMap::value_type( 0x2286, "reflexsubset"),
		UnicodeMap::value_type( 0x2287, "reflexsuperset"),
		UnicodeMap::value_type( 0x2295, "circleplus"),
		UnicodeMap::value_type( 0x2297, "circlemultiply"),
		UnicodeMap::value_type( 0x22A5, "perpendicular"),
		UnicodeMap::value_type( 0x22C5, "dotmath"),
		UnicodeMap::value_type( 0x2302, "house"),
		UnicodeMap::value_type( 0x2310, "revlogicalnot"),
		UnicodeMap::value_type( 0x2320, "integraltp"),
		UnicodeMap::value_type( 0x2321, "integralbt"),
		UnicodeMap::value_type( 0x2329, "angleleft"),
		UnicodeMap::value_type( 0x232A, "angleright"),
		UnicodeMap::value_type( 0x2500, "SF100000"),
		UnicodeMap::value_type( 0x2502, "SF110000"),
		UnicodeMap::value_type( 0x250C, "SF010000"),
		UnicodeMap::value_type( 0x2510, "SF030000"),
		UnicodeMap::value_type( 0x2514, "SF020000"),
		UnicodeMap::value_type( 0x2518, "SF040000"),
		UnicodeMap::value_type( 0x251C, "SF080000"),
		UnicodeMap::value_type( 0x2524, "SF090000"),
		UnicodeMap::value_type( 0x252C, "SF060000"),
		UnicodeMap::value_type( 0x2534, "SF070000"),
		UnicodeMap::value_type( 0x253C, "SF050000"),
		UnicodeMap::value_type( 0x2550, "SF430000"),
		UnicodeMap::value_type( 0x2551, "SF240000"),
		UnicodeMap::value_type( 0x2552, "SF510000"),
		UnicodeMap::value_type( 0x2553, "SF520000"),
		UnicodeMap::value_type( 0x2554, "SF390000"),
		UnicodeMap::value_type( 0x2555, "SF220000"),
		UnicodeMap::value_type( 0x2556, "SF210000"),
		UnicodeMap::value_type( 0x2557, "SF250000"),
		UnicodeMap::value_type( 0x2558, "SF500000"),
		UnicodeMap::value_type( 0x2559, "SF490000"),
		UnicodeMap::value_type( 0x255A, "SF380000"),
		UnicodeMap::value_type( 0x255B, "SF280000"),
		UnicodeMap::value_type( 0x255C, "SF270000"),
		UnicodeMap::value_type( 0x255D, "SF260000"),
		UnicodeMap::value_type( 0x255E, "SF360000"),
		UnicodeMap::value_type( 0x255F, "SF370000"),
		UnicodeMap::value_type( 0x2560, "SF420000"),
		UnicodeMap::value_type( 0x2561, "SF190000"),
		UnicodeMap::value_type( 0x2562, "SF200000"),
		UnicodeMap::value_type( 0x2563, "SF230000"),
		UnicodeMap::value_type( 0x2564, "SF470000"),
		UnicodeMap::value_type( 0x2565, "SF480000"),
		UnicodeMap::value_type( 0x2566, "SF410000"),
		UnicodeMap::value_type( 0x2567, "SF450000"),
		UnicodeMap::value_type( 0x2568, "SF460000"),
		UnicodeMap::value_type( 0x2569, "SF400000"),
		UnicodeMap::value_type( 0x256A, "SF540000"),
		UnicodeMap::value_type( 0x256B, "SF530000"),
		UnicodeMap::value_type( 0x256C, "SF440000"),
		UnicodeMap::value_type( 0x2580, "upblock"),
		UnicodeMap::value_type( 0x2584, "dnblock"),
		UnicodeMap::value_type( 0x2588, "block"),
		UnicodeMap::value_type( 0x258C, "lfblock"),
		UnicodeMap::value_type( 0x2590, "rtblock"),
		UnicodeMap::value_type( 0x2591, "ltshade"),
		UnicodeMap::value_type( 0x2592, "shade"),
		UnicodeMap::value_type( 0x2593, "dkshade"),
		UnicodeMap::value_type( 0x25A0, "filledbox"),
		UnicodeMap::value_type( 0x25A1, "H22073"),
		UnicodeMap::value_type( 0x25AA, "H18543"),
		UnicodeMap::value_type( 0x25AB, "H18551"),
		UnicodeMap::value_type( 0x25AC, "filledrect"),
		UnicodeMap::value_type( 0x25B2, "triagup"),
		UnicodeMap::value_type( 0x25BA, "triagrt"),
		UnicodeMap::value_type( 0x25BC, "triagdn"),
		UnicodeMap::value_type( 0x25C4, "triaglf"),
		UnicodeMap::value_type( 0x25CA, "lozenge"),
		UnicodeMap::value_type( 0x25CB, "circle"),
		UnicodeMap::value_type( 0x25CF, "H18533"),
		UnicodeMap::value_type( 0x25D8, "invbullet"),
		UnicodeMap::value_type( 0x25D9, "invcircle"),
		UnicodeMap::value_type( 0x25E6, "openbullet"),
		UnicodeMap::value_type( 0x263A, "smileface"),
		UnicodeMap::value_type( 0x263B, "invsmileface"),
		UnicodeMap::value_type( 0x263C, "sun"),
		UnicodeMap::value_type( 0x2640, "female"),
		UnicodeMap::value_type( 0x2642, "male"),
		UnicodeMap::value_type( 0x2660, "spade"),
		UnicodeMap::value_type( 0x2663, "club"),
		UnicodeMap::value_type( 0x2665, "heart"),
		UnicodeMap::value_type( 0x2666, "diamond"),
		UnicodeMap::value_type( 0x266A, "musicalnote"),
		UnicodeMap::value_type( 0x266B, "musicalnotedbl"),
		UnicodeMap::value_type( 0xF6BE, "dotlessj"),
		UnicodeMap::value_type( 0xF6BF, "LL"),
		UnicodeMap::value_type( 0xF6C0, "ll"),
		UnicodeMap::value_type( 0xF6C1, "Scedilla"),
		UnicodeMap::value_type( 0xF6C2, "scedilla"),
		UnicodeMap::value_type( 0xF6C3, "commaaccent"),
		UnicodeMap::value_type( 0xF6C4, "afii10063"),
		UnicodeMap::value_type( 0xF6C5, "afii10064"),
		UnicodeMap::value_type( 0xF6C6, "afii10192"),
		UnicodeMap::value_type( 0xF6C7, "afii10831"),
		UnicodeMap::value_type( 0xF6C8, "afii10832"),
		UnicodeMap::value_type( 0xF6C9, "Acute"),
		UnicodeMap::value_type( 0xF6CA, "Caron"),
		UnicodeMap::value_type( 0xF6CB, "Dieresis"),
		UnicodeMap::value_type( 0xF6CC, "DieresisAcute"),
		UnicodeMap::value_type( 0xF6CD, "DieresisGrave"),
		UnicodeMap::value_type( 0xF6CE, "Grave"),
		UnicodeMap::value_type( 0xF6CF, "Hungarumlaut"),
		UnicodeMap::value_type( 0xF6D0, "Macron"),
		UnicodeMap::value_type( 0xF6D1, "cyrBreve"),
		UnicodeMap::value_type( 0xF6D2, "cyrFlex"),
		UnicodeMap::value_type( 0xF6D3, "dblGrave"),
		UnicodeMap::value_type( 0xF6D4, "cyrbreve"),
		UnicodeMap::value_type( 0xF6D5, "cyrflex"),
		UnicodeMap::value_type( 0xF6D6, "dblgrave"),
		UnicodeMap::value_type( 0xF6D7, "dieresisacute"),
		UnicodeMap::value_type( 0xF6D8, "dieresisgrave"),
		UnicodeMap::value_type( 0xF6D9, "copyrightserif"),
		UnicodeMap::value_type( 0xF6DA, "registerserif"),
		UnicodeMap::value_type( 0xF6DB, "trademarkserif"),
		UnicodeMap::value_type( 0xF6DC, "onefitted"),
		UnicodeMap::value_type( 0xF6DD, "rupiah"),
		UnicodeMap::value_type( 0xF6DE, "threequartersemdash"),
		UnicodeMap::value_type( 0xF6DF, "centinferior"),
		UnicodeMap::value_type( 0xF6E0, "centsuperior"),
		UnicodeMap::value_type( 0xF6E1, "commainferior"),
		UnicodeMap::value_type( 0xF6E2, "commasuperior"),
		UnicodeMap::value_type( 0xF6E3, "dollarinferior"),
		UnicodeMap::value_type( 0xF6E4, "dollarsuperior"),
		UnicodeMap::value_type( 0xF6E5, "hypheninferior"),
		UnicodeMap::value_type( 0xF6E6, "hyphensuperior"),
		UnicodeMap::value_type( 0xF6E7, "periodinferior"),
		UnicodeMap::value_type( 0xF6E8, "periodsuperior"),
		UnicodeMap::value_type( 0xF6E9, "asuperior"),
		UnicodeMap::value_type( 0xF6EA, "bsuperior"),
		UnicodeMap::value_type( 0xF6EB, "dsuperior"),
		UnicodeMap::value_type( 0xF6EC, "esuperior"),
		UnicodeMap::value_type( 0xF6ED, "isuperior"),
		UnicodeMap::value_type( 0xF6EE, "lsuperior"),
		UnicodeMap::value_type( 0xF6EF, "msuperior"),
		UnicodeMap::value_type( 0xF6F0, "osuperior"),
		UnicodeMap::value_type( 0xF6F1, "rsuperior"),
		UnicodeMap::value_type( 0xF6F2, "ssuperior"),
		UnicodeMap::value_type( 0xF6F3, "tsuperior"),
		UnicodeMap::value_type( 0xF6F4, "Brevesmall"),
		UnicodeMap::value_type( 0xF6F5, "Caronsmall"),
		UnicodeMap::value_type( 0xF6F6, "Circumflexsmall"),
		UnicodeMap::value_type( 0xF6F7, "Dotaccentsmall"),
		UnicodeMap::value_type( 0xF6F8, "Hungarumlautsmall"),
		UnicodeMap::value_type( 0xF6F9, "Lslashsmall"),
		UnicodeMap::value_type( 0xF6FA, "OEsmall"),
		UnicodeMap::value_type( 0xF6FB, "Ogoneksmall"),
		UnicodeMap::value_type( 0xF6FC, "Ringsmall"),
		UnicodeMap::value_type( 0xF6FD, "Scaronsmall"),
		UnicodeMap::value_type( 0xF6FE, "Tildesmall"),
		UnicodeMap::value_type( 0xF6FF, "Zcaronsmall"),
		UnicodeMap::value_type( 0xF721, "exclamsmall"),
		UnicodeMap::value_type( 0xF724, "dollaroldstyle"),
		UnicodeMap::value_type( 0xF726, "ampersandsmall"),
		UnicodeMap::value_type( 0xF730, "zerooldstyle"),
		UnicodeMap::value_type( 0xF731, "oneoldstyle"),
		UnicodeMap::value_type( 0xF732, "twooldstyle"),
		UnicodeMap::value_type( 0xF733, "threeoldstyle"),
		UnicodeMap::value_type( 0xF734, "fouroldstyle"),
		UnicodeMap::value_type( 0xF735, "fiveoldstyle"),
		UnicodeMap::value_type( 0xF736, "sixoldstyle"),
		UnicodeMap::value_type( 0xF737, "sevenoldstyle"),
		UnicodeMap::value_type( 0xF738, "eightoldstyle"),
		UnicodeMap::value_type( 0xF739, "nineoldstyle"),
		UnicodeMap::value_type( 0xF73F, "questionsmall"),
		UnicodeMap::value_type( 0xF760, "Gravesmall"),
		UnicodeMap::value_type( 0xF761, "Asmall"),
		UnicodeMap::value_type( 0xF762, "Bsmall"),
		UnicodeMap::value_type( 0xF763, "Csmall"),
		UnicodeMap::value_type( 0xF764, "Dsmall"),
		UnicodeMap::value_type( 0xF765, "Esmall"),
		UnicodeMap::value_type( 0xF766, "Fsmall"),
		UnicodeMap::value_type( 0xF767, "Gsmall"),
		UnicodeMap::value_type( 0xF768, "Hsmall"),
		UnicodeMap::value_type( 0xF769, "Ismall"),
		UnicodeMap::value_type( 0xF76A, "Jsmall"),
		UnicodeMap::value_type( 0xF76B, "Ksmall"),
		UnicodeMap::value_type( 0xF76C, "Lsmall"),
		UnicodeMap::value_type( 0xF76D, "Msmall"),
		UnicodeMap::value_type( 0xF76E, "Nsmall"),
		UnicodeMap::value_type( 0xF76F, "Osmall"),
		UnicodeMap::value_type( 0xF770, "Psmall"),
		UnicodeMap::value_type( 0xF771, "Qsmall"),
		UnicodeMap::value_type( 0xF772, "Rsmall"),
		UnicodeMap::value_type( 0xF773, "Ssmall"),
		UnicodeMap::value_type( 0xF774, "Tsmall"),
		UnicodeMap::value_type( 0xF775, "Usmall"),
		UnicodeMap::value_type( 0xF776, "Vsmall"),
		UnicodeMap::value_type( 0xF777, "Wsmall"),
		UnicodeMap::value_type( 0xF778, "Xsmall"),
		UnicodeMap::value_type( 0xF779, "Ysmall"),
		UnicodeMap::value_type( 0xF77A, "Zsmall"),
		UnicodeMap::value_type( 0xF7A1, "exclamdownsmall"),
		UnicodeMap::value_type( 0xF7A2, "centoldstyle"),
		UnicodeMap::value_type( 0xF7A8, "Dieresissmall"),
		UnicodeMap::value_type( 0xF7AF, "Macronsmall"),
		UnicodeMap::value_type( 0xF7B4, "Acutesmall"),
		UnicodeMap::value_type( 0xF7B8, "Cedillasmall"),
		UnicodeMap::value_type( 0xF7BF, "questiondownsmall"),
		UnicodeMap::value_type( 0xF7E0, "Agravesmall"),
		UnicodeMap::value_type( 0xF7E1, "Aacutesmall"),
		UnicodeMap::value_type( 0xF7E2, "Acircumflexsmall"),
		UnicodeMap::value_type( 0xF7E3, "Atildesmall"),
		UnicodeMap::value_type( 0xF7E4, "Adieresissmall"),
		UnicodeMap::value_type( 0xF7E5, "Aringsmall"),
		UnicodeMap::value_type( 0xF7E6, "AEsmall"),
		UnicodeMap::value_type( 0xF7E7, "Ccedillasmall"),
		UnicodeMap::value_type( 0xF7E8, "Egravesmall"),
		UnicodeMap::value_type( 0xF7E9, "Eacutesmall"),
		UnicodeMap::value_type( 0xF7EA, "Ecircumflexsmall"),
		UnicodeMap::value_type( 0xF7EB, "Edieresissmall"),
		UnicodeMap::value_type( 0xF7EC, "Igravesmall"),
		UnicodeMap::value_type( 0xF7ED, "Iacutesmall"),
		UnicodeMap::value_type( 0xF7EE, "Icircumflexsmall"),
		UnicodeMap::value_type( 0xF7EF, "Idieresissmall"),
		UnicodeMap::value_type( 0xF7F0, "Ethsmall"),
		UnicodeMap::value_type( 0xF7F1, "Ntildesmall"),
		UnicodeMap::value_type( 0xF7F2, "Ogravesmall"),
		UnicodeMap::value_type( 0xF7F3, "Oacutesmall"),
		UnicodeMap::value_type( 0xF7F4, "Ocircumflexsmall"),
		UnicodeMap::value_type( 0xF7F5, "Otildesmall"),
		UnicodeMap::value_type( 0xF7F6, "Odieresissmall"),
		UnicodeMap::value_type( 0xF7F8, "Oslashsmall"),
		UnicodeMap::value_type( 0xF7F9, "Ugravesmall"),
		UnicodeMap::value_type( 0xF7FA, "Uacutesmall"),
		UnicodeMap::value_type( 0xF7FB, "Ucircumflexsmall"),
		UnicodeMap::value_type( 0xF7FC, "Udieresissmall"),
		UnicodeMap::value_type( 0xF7FD, "Yacutesmall"),
		UnicodeMap::value_type( 0xF7FE, "Thornsmall"),
		UnicodeMap::value_type( 0xF7FF, "Ydieresissmall"),
		UnicodeMap::value_type( 0xF8E5, "radicalex"),
		UnicodeMap::value_type( 0xF8E6, "arrowvertex"),
		UnicodeMap::value_type( 0xF8E7, "arrowhorizex"),
		UnicodeMap::value_type( 0xF8E8, "registersans"),
		UnicodeMap::value_type( 0xF8E9, "copyrightsans"),
		UnicodeMap::value_type( 0xF8EA, "trademarksans"),
		UnicodeMap::value_type( 0xF8EB, "parenlefttp"),
		UnicodeMap::value_type( 0xF8EC, "parenleftex"),
		UnicodeMap::value_type( 0xF8ED, "parenleftbt"),
		UnicodeMap::value_type( 0xF8EE, "bracketlefttp"),
		UnicodeMap::value_type( 0xF8EF, "bracketleftex"),
		UnicodeMap::value_type( 0xF8F0, "bracketleftbt"),
		UnicodeMap::value_type( 0xF8F1, "bracelefttp"),
		UnicodeMap::value_type( 0xF8F2, "braceleftmid"),
		UnicodeMap::value_type( 0xF8F3, "braceleftbt"),
		UnicodeMap::value_type( 0xF8F4, "braceex"),
		UnicodeMap::value_type( 0xF8F5, "integralex"),
		UnicodeMap::value_type( 0xF8F6, "parenrighttp"),
		UnicodeMap::value_type( 0xF8F7, "parenrightex"),
		UnicodeMap::value_type( 0xF8F8, "parenrightbt"),
		UnicodeMap::value_type( 0xF8F9, "bracketrighttp"),
		UnicodeMap::value_type( 0xF8FA, "bracketrightex"),
		UnicodeMap::value_type( 0xF8FB, "bracketrightbt"),
		UnicodeMap::value_type( 0xF8FC, "bracerighttp"),
		UnicodeMap::value_type( 0xF8FD, "bracerightmid"),
		UnicodeMap::value_type( 0xF8FE, "bracerightbt"),
		UnicodeMap::value_type( 0xFB00, "ff"),
		UnicodeMap::value_type( 0xFB01, "fi"),
		UnicodeMap::value_type( 0xFB02, "fl"),
		UnicodeMap::value_type( 0xFB03, "ffi"),
		UnicodeMap::value_type( 0xFB04, "ffl"),
		UnicodeMap::value_type( 0xFB1F, "afii57705"),
		UnicodeMap::value_type( 0xFB2A, "afii57694"),
		UnicodeMap::value_type( 0xFB2B, "afii57695"),
		UnicodeMap::value_type( 0xFB35, "afii57723"),
		UnicodeMap::value_type( 0xFB4B, "afii57700"),
		UnicodeMap::value_type( 0xFFFF, not_def ),
	} ;

	const UnicodeMap unimap( Begin(table), End(table) ) ;

} // end of local namespace

bool UnicodeToName( wchar_t ch, const char*& name )
{
	UnicodeMap::left_const_iterator i = unimap.left.find( ch ) ;
	if ( i != unimap.left.end() )
	{
		name = i->second ;
		return true ;
	}
	else
		return false ;
}

bool NameToUnicode( const char *name, wchar_t& unicode )
{
	UnicodeMap::right_const_iterator i = unimap.right.find( name ) ;
	if ( i != unimap.right.end() )
	{
		unicode = i->second ;
		return true ;
	}
	else
		return false ;
}

} // end of pdf namespace
